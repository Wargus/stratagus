$extern void InitVideo();
$extern void ShowFullImage(const std::string& name, unsigned int timeOutInSecond);

void InitVideo();
extern int PlayMovie(const std::string name);
extern void ShowFullImage(const std::string name, unsigned int timeOutInSecond);
extern void SaveMapPNG(const char *name);

class CVideo
{
public:
	int Width;
	int Height;
	int Depth;
	bool FullScreen;
	bool ResizeScreen(int width, int height);
};

CVideo Video;
void ToggleFullScreen(void);

class CGraphic
{
public:
	static CGraphic *New(const std::string file, int w = 0, int h = 0);
	static CGraphic *ForceNew(const std::string file, int w = 0, int h = 0);
	static CGraphic *Get(const std::string file);
	static void Free(CGraphic *);
	void Load(bool grayscale = false);
	void Resize(int w, int h);
	void SetPaletteColor(int idx, int r, int g, int b);
	void OverlayGraphic(CGraphic *g, bool mask = false);
};

class CPlayerColorGraphic : public CGraphic
{
public:
	static CPlayerColorGraphic *New(const std::string file, int w = 0, int h = 0);
	static CPlayerColorGraphic *ForceNew(const std::string file, int w = 0, int h = 0);
	static CPlayerColorGraphic *Get(const std::string file);
};

class CColor {
	CColor(unsigned char r = 0, unsigned char g = 0, unsigned char b = 0,
		unsigned char a = 255);

	unsigned char R;
	unsigned char G;
	unsigned char B;
	unsigned char A;
};

void SetColorCycleAll(bool value);
void ClearAllColorCyclingRange();
void AddColorCyclingRange(unsigned int startColorIndex, unsigned int endColorIndex);
unsigned int SetColorCycleSpeed(unsigned int speed);

class Mng
{
public:
		static Mng *New(const std::string name);
		static void Free(Mng *mng);
        bool Load();
        void Draw(int x, int y);
        void Reset();

		static int MaxFPS;
}

class Movie
{
public:
        Movie();
        bool Load(const std::string name, int w, int h);
        bool IsPlaying();
}
